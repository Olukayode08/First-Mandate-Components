import React, { useState } from 'react'
import styled from 'styled-components'

const flats = {
  Bungalow: {
    units: {
      4: {
        bedrooms: ['One', 'Two', 'Three'],
        bathrooms: ['One', 'Two', 'Three'],
      },
      3: {
        bedrooms: ['One', 'Two', 'Three'],
        bathrooms: ['One', 'Two', 'Three'],
      },
      // Add more states as needed
    },
  },
  Residential: {
    units: {
      4: {
        bedrooms: ['One', 'Two', 'Three'],
        bathrooms: ['One', 'Two', 'Three'],
      },
      3: {
        bedrooms: ['One', 'Two', 'Three'],
        bathrooms: ['One', 'Two', 'Three'],
      },
      // Add more units as needed
    },
  },
  Duplex: {
    units: {
      4: {
        bedrooms: ['One', 'Two', 'Three'],
        bathrooms: ['One', 'Two', 'Three'],
      },
      3: {
        bedrooms: ['One', 'Two', 'Three'],
        bathrooms: ['One', 'Two', 'Three'],
      },
      // Add more units as needed
    },
  },
  Industrial: {
    units: {
      4: {
        bedrooms: ['One', 'Two', 'Three'],
        bathrooms: ['One', 'Two', 'Three'],
      },
      3: {
        bedrooms: ['One', 'Two', 'Three'],
        bathrooms: ['One', 'Two', 'Three'],
      },
      // Add more units as needed
    },
  },
}

const PropertyTypeDropdown = () => {
  const [selectedFlat, setSelectedFlat] = useState('')
  const [selectedUnit, setSelectedUnit] = useState('')
  const [selectedBedroom, setSelectedBedroom] = useState('')
  const [selectedBathroom, setSelectedBathroom] = useState('')

  const handleFlatChange = (e) => {
    setSelectedFlat(e.target.value)
    setSelectedUnit('')
    setSelectedBedroom('')
    setSelectedBathroom('')
  }

  const handleUnitChange = (e) => {
    setSelectedUnit(e.target.value)
    setSelectedBedroom('')
    setSelectedBathroom('')
  }

  const handleBedroomChange = (e) => {
    setSelectedBedroom(e.target.value)
    setSelectedBathroom('')
  }

  return (
    <>
      <Wrapper>
        <section className='select-section'>
          <div className='select'>
            <select value={selectedFlat} onChange={handleFlatChange}>
              <option value=''>Flat</option>
              {Object.keys(flats).map((flat) => (
                <option key={flat} value={flat}>
                  {flat}
                </option>
              ))}
            </select>
          </div>

          <div className='select'>
            <select
              value={selectedUnit}
              onChange={handleUnitChange}
              disabled={!selectedFlat}
            >
              <option value=''>Number of units</option>
              {selectedFlat &&
                Object.keys(flats[selectedFlat].units).map((unit) => (
                  <option key={unit} value={unit}>
                    {unit}
                  </option>
                ))}
            </select>
          </div>

          <div className='select'>
            <select
              value={selectedBedroom}
              onChange={handleBedroomChange}
              disabled={!selectedUnit}
            >
              <option value=''>Number of bedroom</option>
              {selectedUnit &&
                flats[selectedFlat].units[selectedUnit].bedrooms.map(
                  (bedroom) => (
                    <option key={bedroom} value={bedroom}>
                      {bedroom}
                    </option>
                  )
                )}
            </select>
          </div>

          <div className='select'>
            <select
              value={selectedBathroom}
              onChange={(e) => setSelectedBathroom(e.target.value)}
              disabled={!selectedBedroom}
            >
              <option value=''>Number of bath</option>
              {selectedBedroom &&
                flats[selectedFlat].units[selectedUnit].bathrooms.map(
                  (bathroom) => (
                    <option key={bathroom} value={bathroom}>
                      {bathroom}
                    </option>
                  )
                )}
            </select>
          </div>
        </section>
      </Wrapper>
    </>
  )
}
const Wrapper = styled.section`
  .select-section {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    width: 100%;
    margin: 10px 0;
  }
  .select {
    width: 270px;
    height: 40px;
    border: 1px solid black;
    padding: 0 15px;
    border-radius: 5px;
  }
  select {
    width: 100%;
    margin: 0 auto;
    height: 100%;
    border: transparent;
    outline: none;
  }
`
export default PropertyTypeDropdown


Edit and delete

import React, { useState } from 'react';

const App = () => {
  const initialData = [
    { id: 1, content: 'Item 1' },
    { id: 2, content: 'Item 2' },
    { id: 3, content: 'Item 3' },
    { id: 4, content: 'Item 4' }
  ];

  const [data, setData] = useState(initialData);

  const handleEdit = (id, newContent) => {
    setData(prevData =>
      prevData.map(item => (item.id === id ? { ...item, content: newContent } : item))
    );
  };

  const handleDelete = id => {
    setData(prevData => prevData.filter(item => item.id !== id));
  };

  return (
    <div>
      {data.map(item => (
        <div key={item.id}>
          <p>{item.content}</p>
          <button onClick={() => handleEdit(item.id, prompt('Enter new content:'))}>
            Edit
          </button>
          <button onClick={() => handleDelete(item.id)}>Delete</button>
        </div>
      ))}
    </div>
  );
};

export default App;
